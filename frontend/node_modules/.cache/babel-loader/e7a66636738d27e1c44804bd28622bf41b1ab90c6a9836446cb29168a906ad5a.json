{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport http from \"@/api/http\";\nexport default {\n  name: \"RegisterView\",\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      password2: \"\",\n      showPass: false,\n      loading: false,\n      errorMessage: \"\",\n      successMessage: \"\"\n    };\n  },\n  methods: {\n    async handleRegister() {\n      this.errorMessage = \"\";\n      this.successMessage = \"\";\n      if (!this.username || !this.password || !this.password2) {\n        this.errorMessage = \"Completa todos los campos.\";\n        return;\n      }\n      if (this.password.length < 6) {\n        this.errorMessage = \"La contraseña debe tener al menos 6 caracteres.\";\n        return;\n      }\n      if (this.password !== this.password2) {\n        this.errorMessage = \"Las contraseñas no coinciden.\";\n        return;\n      }\n      this.loading = true;\n      try {\n        // Crear usuario\n        const {\n          data\n        } = await http.post(\"/auth/register\", {\n          username: this.username,\n          password: this.password\n        });\n        this.successMessage = data?.message || \"Cuenta creada con éxito.\";\n\n        // Opción A: redirigir al login\n        setTimeout(() => this.$router.push(\"/login\"), 700);\n\n        // --- Opción B: autologin (descomenta si prefieres) ---\n        // const login = await http.post(\"/auth/login\", {\n        //   username: this.username,\n        //   password: this.password,\n        // });\n        // localStorage.setItem(\"access_token\", login.data.access_token);\n        // if (login.data?.user?.username) localStorage.setItem(\"username\", login.data.user.username);\n        // this.$router.push(\"/categorias\");\n      } catch (e) {\n        this.errorMessage = e?.response?.data?.error || \"No se pudo crear la cuenta.\";\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["http","name","data","username","password","password2","showPass","loading","errorMessage","successMessage","methods","handleRegister","length","post","message","setTimeout","$router","push","e","response","error"],"sources":["C:\\Users\\pedvi\\Documents\\catalogo-web\\frontend\\src\\views\\RegisterView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container d-flex justify-content-center align-items-center\" style=\"min-height: 70vh;\">\r\n    <div class=\"card shadow-sm\" style=\"max-width: 480px; width: 100%;\">\r\n      <div class=\"card-body p-4\">\r\n        <h3 class=\"mb-3 text-center\">Crear cuenta</h3>\r\n\r\n        <form @submit.prevent=\"handleRegister\" novalidate>\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Usuario</label>\r\n            <input\r\n              v-model.trim=\"username\"\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              autocomplete=\"username\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Contraseña</label>\r\n            <input\r\n              v-model=\"password\"\r\n              :type=\"showPass ? 'text' : 'password'\"\r\n              class=\"form-control\"\r\n              autocomplete=\"new-password\"\r\n              required\r\n              minlength=\"6\"\r\n            />\r\n            <div class=\"form-text\">Mínimo 6 caracteres.</div>\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <label class=\"form-label\">Confirmar contraseña</label>\r\n            <input\r\n              v-model=\"password2\"\r\n              :type=\"showPass ? 'text' : 'password'\"\r\n              class=\"form-control\"\r\n              autocomplete=\"new-password\"\r\n              required\r\n              minlength=\"6\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-check mb-3\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" v-model=\"showPass\" id=\"showPassChk\" />\r\n            <label class=\"form-check-label\" for=\"showPassChk\">Mostrar contraseñas</label>\r\n          </div>\r\n\r\n          <button :disabled=\"loading\" type=\"submit\" class=\"btn btn-success w-100\">\r\n            {{ loading ? 'Creando...' : 'Crear cuenta' }}\r\n          </button>\r\n\r\n          <p v-if=\"errorMessage\" class=\"text-danger mt-3 mb-0\">{{ errorMessage }}</p>\r\n          <p v-if=\"successMessage\" class=\"text-success mt-3 mb-0\">{{ successMessage }}</p>\r\n\r\n          <div class=\"text-center mt-3\">\r\n            <RouterLink to=\"/login\">¿Ya tienes cuenta? Inicia sesión</RouterLink>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport http from \"@/api/http\";\r\n\r\nexport default {\r\n  name: \"RegisterView\",\r\n  data() {\r\n    return {\r\n      username: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      showPass: false,\r\n      loading: false,\r\n      errorMessage: \"\",\r\n      successMessage: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async handleRegister() {\r\n      this.errorMessage = \"\";\r\n      this.successMessage = \"\";\r\n\r\n      if (!this.username || !this.password || !this.password2) {\r\n        this.errorMessage = \"Completa todos los campos.\";\r\n        return;\r\n      }\r\n      if (this.password.length < 6) {\r\n        this.errorMessage = \"La contraseña debe tener al menos 6 caracteres.\";\r\n        return;\r\n      }\r\n      if (this.password !== this.password2) {\r\n        this.errorMessage = \"Las contraseñas no coinciden.\";\r\n        return;\r\n      }\r\n\r\n      this.loading = true;\r\n      try {\r\n        // Crear usuario\r\n        const { data } = await http.post(\"/auth/register\", {\r\n          username: this.username,\r\n          password: this.password,\r\n        });\r\n\r\n        this.successMessage = data?.message || \"Cuenta creada con éxito.\";\r\n\r\n        // Opción A: redirigir al login\r\n        setTimeout(() => this.$router.push(\"/login\"), 700);\r\n\r\n        // --- Opción B: autologin (descomenta si prefieres) ---\r\n        // const login = await http.post(\"/auth/login\", {\r\n        //   username: this.username,\r\n        //   password: this.password,\r\n        // });\r\n        // localStorage.setItem(\"access_token\", login.data.access_token);\r\n        // if (login.data?.user?.username) localStorage.setItem(\"username\", login.data.user.username);\r\n        // this.$router.push(\"/categorias\");\r\n      } catch (e) {\r\n        this.errorMessage = e?.response?.data?.error || \"No se pudo crear la cuenta.\";\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";AAiEA,OAAOA,IAAG,MAAO,YAAY;AAE7B,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,KAAK;MACfC,OAAO,EAAE,KAAK;MACdC,YAAY,EAAE,EAAE;MAChBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI,CAACH,YAAW,GAAI,EAAE;MACtB,IAAI,CAACC,cAAa,GAAI,EAAE;MAExB,IAAI,CAAC,IAAI,CAACN,QAAO,IAAK,CAAC,IAAI,CAACC,QAAO,IAAK,CAAC,IAAI,CAACC,SAAS,EAAE;QACvD,IAAI,CAACG,YAAW,GAAI,4BAA4B;QAChD;MACF;MACA,IAAI,IAAI,CAACJ,QAAQ,CAACQ,MAAK,GAAI,CAAC,EAAE;QAC5B,IAAI,CAACJ,YAAW,GAAI,iDAAiD;QACrE;MACF;MACA,IAAI,IAAI,CAACJ,QAAO,KAAM,IAAI,CAACC,SAAS,EAAE;QACpC,IAAI,CAACG,YAAW,GAAI,+BAA+B;QACnD;MACF;MAEA,IAAI,CAACD,OAAM,GAAI,IAAI;MACnB,IAAI;QACF;QACA,MAAM;UAAEL;QAAK,IAAI,MAAMF,IAAI,CAACa,IAAI,CAAC,gBAAgB,EAAE;UACjDV,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QAEF,IAAI,CAACK,cAAa,GAAIP,IAAI,EAAEY,OAAM,IAAK,0BAA0B;;QAEjE;QACAC,UAAU,CAAC,MAAM,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC;;QAElD;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACF,EAAE,OAAOC,CAAC,EAAE;QACV,IAAI,CAACV,YAAW,GAAIU,CAAC,EAAEC,QAAQ,EAAEjB,IAAI,EAAEkB,KAAI,IAAK,6BAA6B;MAC/E,UAAU;QACR,IAAI,CAACb,OAAM,GAAI,KAAK;MACtB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
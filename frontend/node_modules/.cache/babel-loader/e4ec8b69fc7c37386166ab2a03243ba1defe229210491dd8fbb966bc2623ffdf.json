{"ast":null,"code":"import Swal from \"sweetalert2\";\nimport http from \"@/api/http\"; // axios con interceptores (access + refresh)\n\nexport default {\n  name: \"CategoriaView\",\n  data() {\n    return {\n      categorias: [],\n      form: {\n        id: null,\n        nombre: \"\",\n        descripcion: \"\"\n      },\n      editando: false,\n      page: 1,\n      per_page: 10,\n      total: 0,\n      search: \"\",\n      loading: false,\n      searchTimer: null\n    };\n  },\n  computed: {\n    haySiguiente() {\n      // si total viene del backend, calcula si hay más páginas;\n      // si no hay total (array plano), habilita \"Siguiente\" siempre.\n      if (typeof this.total === \"number\" && this.total >= 0) {\n        return this.page * this.per_page < this.total;\n      }\n      return true;\n    }\n  },\n  mounted() {\n    this.cargarCategorias();\n  },\n  methods: {\n    async cargarCategorias() {\n      this.loading = true;\n      try {\n        // Backend acepta 'search' o 'q', y 'per_page' o 'size'\n        const params = {\n          page: this.page,\n          per_page: this.per_page,\n          search: this.search?.trim() || \"\"\n        };\n        const {\n          data\n        } = await http.get(\"/categorias/\", {\n          params\n        });\n\n        // ✅ Soporta array plano o paginado { items: [], total, page, per_page }\n        const items = Array.isArray(data) ? data : Array.isArray(data?.items) ? data.items : Array.isArray(data?.data) ? data.data : [];\n        this.categorias = items;\n        this.total = Number.isFinite(data?.total) ? data.total : items.length;\n        // si backend nos devolvió la página/por-página efectiva, sincroniza:\n        if (Number.isFinite(data?.page)) this.page = data.page;\n        if (Number.isFinite(data?.per_page)) this.per_page = data.per_page;\n      } catch (e) {\n        console.error(e);\n        this.categorias = [];\n        Swal.fire(\"Error\", e?.response?.data?.error || \"Error al cargar categorías\", \"error\");\n      } finally {\n        this.loading = false;\n      }\n    },\n    // debounce simple para la búsqueda\n    onSearchInput() {\n      clearTimeout(this.searchTimer);\n      this.searchTimer = setTimeout(() => {\n        this.page = 1;\n        this.cargarCategorias();\n      }, 350);\n    },\n    async confirmarGuardar() {\n      const result = await Swal.fire({\n        title: \"¿Está seguro que desea guardar la información ingresada?\",\n        icon: \"question\",\n        showCancelButton: true,\n        confirmButtonText: \"Sí, guardar\",\n        cancelButtonText: \"Cancelar\"\n      });\n      if (result.isConfirmed) this.guardarCategoria();\n    },\n    async guardarCategoria() {\n      if (!this.form.nombre?.trim()) {\n        Swal.fire(\"Validación\", \"El nombre es requerido\", \"warning\");\n        return;\n      }\n      this.loading = true;\n      try {\n        const url = this.editando ? `/categorias/${this.form.id}` : `/categorias/`;\n        const method = this.editando ? \"put\" : \"post\";\n        const payload = {\n          nombre: this.form.nombre?.trim(),\n          descripcion: this.form.descripcion?.trim() || null\n        };\n        const {\n          status,\n          data\n        } = await http[method](url, payload);\n        if (!String(status).startsWith(\"2\")) {\n          throw new Error(data?.error || \"Error al guardar la categoría\");\n        }\n        this.resetForm();\n        this.editando = false;\n        await this.cargarCategorias();\n        Swal.fire(\"Éxito\", \"Categoría guardada correctamente\", \"success\");\n      } catch (e) {\n        console.error(e);\n        Swal.fire(\"Error\", e?.response?.data?.error || \"Error al guardar la categoría\", \"error\");\n      } finally {\n        this.loading = false;\n      }\n    },\n    async editarCategoria(categoria) {\n      const result = await Swal.fire({\n        title: \"¿Editar categoría?\",\n        text: `¿Deseas editar la categoría \"${categoria.nombre}\"?`,\n        icon: \"question\",\n        showCancelButton: true,\n        confirmButtonText: \"Sí, editar\",\n        cancelButtonText: \"Cancelar\"\n      });\n      if (result.isConfirmed) {\n        this.form = {\n          id: categoria.id,\n          nombre: categoria.nombre,\n          descripcion: categoria.descripcion || \"\"\n        };\n        this.editando = true;\n        window.scrollTo({\n          top: 0,\n          behavior: \"smooth\"\n        });\n      }\n    },\n    cancelarEdicion() {\n      this.resetForm();\n      this.editando = false;\n    },\n    async confirmarEliminar(id) {\n      const result = await Swal.fire({\n        title: \"¿Estás seguro?\",\n        text: \"No podrás revertir esta acción\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Sí, eliminar\",\n        cancelButtonText: \"Cancelar\"\n      });\n      if (result.isConfirmed) {\n        this.eliminarCategoria(id);\n      }\n    },\n    async eliminarCategoria(id) {\n      this.loading = true;\n      try {\n        const {\n          status,\n          data\n        } = await http.delete(`/categorias/${id}`);\n        if (!String(status).startsWith(\"2\")) {\n          throw new Error(data?.error || \"No se pudo eliminar\");\n        }\n        Swal.fire(\"Eliminado\", \"La categoría ha sido eliminada\", \"success\");\n        // Si la página actual se queda sin elementos, retrocede una página\n        if (this.categorias.length === 1 && this.page > 1) this.page -= 1;\n        await this.cargarCategorias();\n      } catch (e) {\n        console.error(e);\n        Swal.fire(\"Error\", e?.response?.data?.error || \"Error de red al eliminar\", \"error\");\n      } finally {\n        this.loading = false;\n      }\n    },\n    resetForm() {\n      this.form = {\n        id: null,\n        nombre: \"\",\n        descripcion: \"\"\n      };\n    },\n    cambiarPagina(nuevaPagina) {\n      if (nuevaPagina < 1 || this.loading) return;\n      this.page = nuevaPagina;\n      this.cargarCategorias();\n    }\n  }\n};","map":{"version":3,"names":["Swal","http","name","data","categorias","form","id","nombre","descripcion","editando","page","per_page","total","search","loading","searchTimer","computed","haySiguiente","mounted","cargarCategorias","methods","params","trim","get","items","Array","isArray","Number","isFinite","length","e","console","error","fire","response","onSearchInput","clearTimeout","setTimeout","confirmarGuardar","result","title","icon","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","guardarCategoria","url","method","payload","status","String","startsWith","Error","resetForm","editarCategoria","categoria","text","window","scrollTo","top","behavior","cancelarEdicion","confirmarEliminar","confirmButtonColor","cancelButtonColor","eliminarCategoria","delete","cambiarPagina","nuevaPagina"],"sources":["C:\\Users\\pedvi\\Documents\\catalogo-web\\frontend\\src\\views\\CategoriaView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-4\">\r\n    <h2>Categorías</h2>\r\n\r\n    <!-- Formulario Crear/Editar -->\r\n    <form @submit.prevent=\"confirmarGuardar\" class=\"mb-4\">\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\">Nombre</label>\r\n        <input v-model.trim=\"form.nombre\" type=\"text\" class=\"form-control\" required />\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label class=\"form-label\">Descripción</label>\r\n        <input v-model.trim=\"form.descripcion\" type=\"text\" class=\"form-control\" />\r\n      </div>\r\n      <button :disabled=\"loading\" type=\"submit\" class=\"btn btn-primary\">\r\n        {{ editando ? 'Actualizar' : 'Agregar' }} Categoría\r\n      </button>\r\n      <button v-if=\"editando\" :disabled=\"loading\" type=\"button\" class=\"btn btn-secondary ms-2\" @click=\"cancelarEdicion\">\r\n        Cancelar\r\n      </button>\r\n    </form>\r\n\r\n    <!-- Filtro de búsqueda -->\r\n    <div class=\"mb-3\">\r\n      <input\r\n        v-model=\"search\"\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        placeholder=\"Buscar por nombre...\"\r\n        @input=\"onSearchInput\"\r\n      />\r\n    </div>\r\n\r\n    <!-- Tabla de Categorías -->\r\n    <table class=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th style=\"width: 80px;\">ID</th>\r\n          <th>Nombre</th>\r\n          <th>Descripción</th>\r\n          <th style=\"width: 180px;\">Acciones</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"categoria in categorias\" :key=\"categoria.id\">\r\n          <td>{{ categoria.id }}</td>\r\n          <td>{{ categoria.nombre }}</td>\r\n          <td>{{ categoria.descripcion }}</td>\r\n          <td>\r\n            <button class=\"btn btn-sm btn-warning me-2\" @click=\"editarCategoria(categoria)\">Editar</button>\r\n            <button class=\"btn btn-sm btn-danger\" @click=\"confirmarEliminar(categoria.id)\">Eliminar</button>\r\n          </td>\r\n        </tr>\r\n        <tr v-if=\"!loading && categorias.length === 0\">\r\n          <td colspan=\"4\" class=\"text-center\">Sin resultados</td>\r\n        </tr>\r\n        <tr v-if=\"loading\">\r\n          <td colspan=\"4\" class=\"text-center\">Cargando...</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Paginación simple -->\r\n    <nav>\r\n      <ul class=\"pagination\">\r\n        <li class=\"page-item\" :class=\"{ disabled: page === 1 || loading }\">\r\n          <button class=\"page-link\" @click=\"cambiarPagina(page - 1)\" :disabled=\"page === 1 || loading\">Anterior</button>\r\n        </li>\r\n        <li class=\"page-item\">\r\n          <span class=\"page-link\">{{ page }}</span>\r\n        </li>\r\n        <li class=\"page-item\" :class=\"{ disabled: !haySiguiente || loading }\">\r\n          <button class=\"page-link\" @click=\"cambiarPagina(page + 1)\" :disabled=\"!haySiguiente || loading\">Siguiente</button>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Swal from \"sweetalert2\";\r\nimport http from \"@/api/http\"; // axios con interceptores (access + refresh)\r\n\r\nexport default {\r\n  name: \"CategoriaView\",\r\n  data() {\r\n    return {\r\n      categorias: [],\r\n      form: { id: null, nombre: \"\", descripcion: \"\" },\r\n      editando: false,\r\n      page: 1,\r\n      per_page: 10,\r\n      total: 0,\r\n      search: \"\",\r\n      loading: false,\r\n      searchTimer: null,\r\n    };\r\n  },\r\n  computed: {\r\n    haySiguiente() {\r\n      // si total viene del backend, calcula si hay más páginas;\r\n      // si no hay total (array plano), habilita \"Siguiente\" siempre.\r\n      if (typeof this.total === \"number\" && this.total >= 0) {\r\n        return this.page * this.per_page < this.total;\r\n      }\r\n      return true;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.cargarCategorias();\r\n  },\r\n  methods: {\r\n    async cargarCategorias() {\r\n      this.loading = true;\r\n      try {\r\n        // Backend acepta 'search' o 'q', y 'per_page' o 'size'\r\n        const params = {\r\n          page: this.page,\r\n          per_page: this.per_page,\r\n          search: this.search?.trim() || \"\",\r\n        };\r\n        const { data } = await http.get(\"/categorias/\", { params });\r\n\r\n        // ✅ Soporta array plano o paginado { items: [], total, page, per_page }\r\n        const items = Array.isArray(data)\r\n          ? data\r\n          : (Array.isArray(data?.items) ? data.items : (Array.isArray(data?.data) ? data.data : []));\r\n\r\n        this.categorias = items;\r\n        this.total = Number.isFinite(data?.total) ? data.total : items.length;\r\n        // si backend nos devolvió la página/por-página efectiva, sincroniza:\r\n        if (Number.isFinite(data?.page)) this.page = data.page;\r\n        if (Number.isFinite(data?.per_page)) this.per_page = data.per_page;\r\n      } catch (e) {\r\n        console.error(e);\r\n        this.categorias = [];\r\n        Swal.fire(\"Error\", e?.response?.data?.error || \"Error al cargar categorías\", \"error\");\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    // debounce simple para la búsqueda\r\n    onSearchInput() {\r\n      clearTimeout(this.searchTimer);\r\n      this.searchTimer = setTimeout(() => {\r\n        this.page = 1;\r\n        this.cargarCategorias();\r\n      }, 350);\r\n    },\r\n\r\n    async confirmarGuardar() {\r\n      const result = await Swal.fire({\r\n        title: \"¿Está seguro que desea guardar la información ingresada?\",\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Sí, guardar\",\r\n        cancelButtonText: \"Cancelar\"\r\n      });\r\n      if (result.isConfirmed) this.guardarCategoria();\r\n    },\r\n\r\n    async guardarCategoria() {\r\n      if (!this.form.nombre?.trim()) {\r\n        Swal.fire(\"Validación\", \"El nombre es requerido\", \"warning\");\r\n        return;\r\n      }\r\n\r\n      this.loading = true;\r\n      try {\r\n        const url = this.editando ? `/categorias/${this.form.id}` : `/categorias/`;\r\n        const method = this.editando ? \"put\" : \"post\";\r\n        const payload = {\r\n          nombre: this.form.nombre?.trim(),\r\n          descripcion: this.form.descripcion?.trim() || null,\r\n        };\r\n\r\n        const { status, data } = await http[method](url, payload);\r\n\r\n        if (!String(status).startsWith(\"2\")) {\r\n          throw new Error(data?.error || \"Error al guardar la categoría\");\r\n        }\r\n\r\n        this.resetForm();\r\n        this.editando = false;\r\n        await this.cargarCategorias();\r\n        Swal.fire(\"Éxito\", \"Categoría guardada correctamente\", \"success\");\r\n      } catch (e) {\r\n        console.error(e);\r\n        Swal.fire(\"Error\", e?.response?.data?.error || \"Error al guardar la categoría\", \"error\");\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    async editarCategoria(categoria) {\r\n      const result = await Swal.fire({\r\n        title: \"¿Editar categoría?\",\r\n        text: `¿Deseas editar la categoría \"${categoria.nombre}\"?`,\r\n        icon: \"question\",\r\n        showCancelButton: true,\r\n        confirmButtonText: \"Sí, editar\",\r\n        cancelButtonText: \"Cancelar\"\r\n      });\r\n\r\n      if (result.isConfirmed) {\r\n        this.form = { id: categoria.id, nombre: categoria.nombre, descripcion: categoria.descripcion || \"\" };\r\n        this.editando = true;\r\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n      }\r\n    },\r\n\r\n    cancelarEdicion() {\r\n      this.resetForm();\r\n      this.editando = false;\r\n    },\r\n\r\n    async confirmarEliminar(id) {\r\n      const result = await Swal.fire({\r\n        title: \"¿Estás seguro?\",\r\n        text: \"No podrás revertir esta acción\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        confirmButtonText: \"Sí, eliminar\",\r\n        cancelButtonText: \"Cancelar\"\r\n      });\r\n\r\n      if (result.isConfirmed) {\r\n        this.eliminarCategoria(id);\r\n      }\r\n    },\r\n\r\n    async eliminarCategoria(id) {\r\n      this.loading = true;\r\n      try {\r\n        const { status, data } = await http.delete(`/categorias/${id}`);\r\n        if (!String(status).startsWith(\"2\")) {\r\n          throw new Error(data?.error || \"No se pudo eliminar\");\r\n        }\r\n        Swal.fire(\"Eliminado\", \"La categoría ha sido eliminada\", \"success\");\r\n        // Si la página actual se queda sin elementos, retrocede una página\r\n        if (this.categorias.length === 1 && this.page > 1) this.page -= 1;\r\n        await this.cargarCategorias();\r\n      } catch (e) {\r\n        console.error(e);\r\n        Swal.fire(\"Error\", e?.response?.data?.error || \"Error de red al eliminar\", \"error\");\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    resetForm() {\r\n      this.form = { id: null, nombre: \"\", descripcion: \"\" };\r\n    },\r\n\r\n    cambiarPagina(nuevaPagina) {\r\n      if (nuevaPagina < 1 || this.loading) return;\r\n      this.page = nuevaPagina;\r\n      this.cargarCategorias();\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppNavbar = _resolveComponent(\"AppNavbar\");\n  const _component_RouterView = _resolveComponent(\"RouterView\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [$setup.showNavbar ? (_openBlock(), _createBlock(_component_AppNavbar, {\n    key: 0\n  })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_RouterView)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["$setup","showNavbar","_createBlock","_component_AppNavbar","key","_createVNode","_component_RouterView"],"sources":["C:\\Users\\pedvi\\Documents\\catalogo-web\\frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <AppNavbar v-if=\"showNavbar\" />\n  <RouterView />\n</template>\n\n<script>\nimport { computed } from \"vue\";\nimport { useRoute } from \"vue-router\";\nimport AppNavbar from \"@/components/AppNavbar.vue\";\n\nexport default {\n  components: { AppNavbar },\n  setup() {\n    const route = useRoute();\n    const token = () => sessionStorage.getItem(\"access_token\");\n    const showNavbar = computed(() => {\n      const hidden = [\"/login\", \"/register\"];\n      if (hidden.includes(route.path)) return false;\n      return !!token();\n    });\n    return { showNavbar };\n  },\n};\n</script>"],"mappings":";;;;6DACmBA,MAAA,CAAAC,UAAU,I,cAA3BC,YAAA,CAA+BC,oBAAA;IAAAC,GAAA;EAAA,M,mCAC/BC,YAAA,CAAcC,qBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}